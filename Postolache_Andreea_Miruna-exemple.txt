-- Ex 11
 
 --1. 
 --Sa se afiseze id-ul, numele, prenumele, indemnizatia sportivilor, daca sunt medaliati, numele, tipul, data de start 
 --si data de final a competitiei la care au participat. Acestea vor fi afisate pentru sportivii 
 -- care nu primesc indemnizatie( pentru cei care nu primesc indemnizatie se va trece 0 in coloana indemnizatie )
 --sau care participa la competitii care au in componenta primele 4 litere "CUPA"
 --  si care in ambele cazuri trebuie sa fi participat la competitii care au avut loc cel mult acum 5 ani 
 -- fata de data curenta. De asemenea, numele si prenumele vor fi concatenate, iar coloana se va numi corespunzator. Coloanele 
 -- id_sportiv, indemnizatie si numele competitiei se vor numi corespunzator. Mai mult, aceste date trebuie ordonate dupa numele
 -- sportivului.
 
 --rezolvare--
 --Pentru aceasta cerere s-a folosit operatia de JOIN pe 4 tabele, filtrarea la nivel de linii, ordonare, 
 -- 3 functii pe siruri de caractere (concat, upper, substr),
 -- 2 functii pe date calendaristice (MONTHS_BETWEEN, sysdate), dar si NVL.
 
 select sp.id_sportiv as "Id-ul sportivului",concat(sp.nume,'  ')||sp.prenume as "Nume sportiv",nvl(sp.indemnizatie,0) "indemnizatie", part.medaliat, comp.nume as "Nume competitie",comp.data_start,comp.data_final, t.tip_competitie
 from sportiv sp join participa part on(sp.id_sportiv=part.id_sportiv)
                join competitie comp on(comp.id_competitie= part.id_competitie)
                join tip t on(t.id_tip=comp.id_tip)
where (sp.indemnizatie!=0 or UPPER(SUBSTR(comp.nume, 1, 4)) ='CUPA') and MONTHS_BETWEEN(sysdate,comp.data_final)<60 --5 ani
order by "Nume sportiv";

--2 Pentru cluburile in care indemnizatia maxim este mai mare sau egala cu 500 si indemnizatia minima mai mica sau egala cu 300,
-- să se obţină codul,
--numele acestor cluburi şi indemnizatia maxim pe club si indemnizatia minima. Nu se tine cont de valorile null de la sportivii
--care nu au indemnizatie

--
-- PREGATIREA
-- select*from sportiv;
-- select *from antrenor;
--  
-- REZOLVAREA--
-- Pentru a se rezolva s-au folosit grupari de date, functii grup( Min, Max) si filtrare la nivel de grupuri

SELECT id_club, nume_club, MAX(indemnizatie)AS "INDEMNIZATIA MAXIMA", Min(indemnizatie)AS "INDEMNIZATIA MINIMA"
FROM sportiv  JOIN antrenor USING(id_antrenor)
             JOIN club USING (id_club)
GROUP BY id_club,nume_club
HAVING MAX(indemnizatie) >= 500 AND MIN(indemnizatie)<=300;


 --3
 
-- Sa se afiseze tarile ordonate dupa nume in care a concurat sportivul cu id-ul 11.
--REZOLVARE--
--s-au utilizat: subcereri nesincronizate pe 5 tabele si order
 
select id_tara,nume_tara
from tara
                WHERE id_tara IN(select id_tara
                                from oras
                                where id_oras IN(select id_oras
                                                from competitie
                                                where id_competitie IN (select id_competitie
                                                                    from participa
                                                                    where id_sportiv= (select id_sportiv
                                                                                        from sportiv  
                                                                                        where ID_SPORTIV=11
                                                                                        )
                                                                        )
                                                    )
                                )
order by nume_tara;

--4
--Pentru fiecare club care are antrenori (sa se stie ca in aceasta diagrama un club trebuie sa aiba minim un antrenor)
-- sa se afiseze id-ul clubului, suma totala a salariilor primite de antrenorii de la acel club
-- si intr-o coloana cu numele STATUS BUGET SALARII sa se afiseze un mesaj care indica statusul bugetului pentru salarii:
-- pentru sumele mai mari de 1400 se va afisa mesajul: SUMA ALOCATA DE CLUB PENTRU A PLATI SALARIUL TUTUROR ANTRENORILOR ESTE MARE
--pentru sumele intre 1200 si 1400 se va afisa mesajul:SUMA ALOCATA DE CLUB PENTRU A PLATI SALARIUL TUTUROR ANTRENORILOR ESTE MEDIE
-- iar pentru restul se va afisa mesajul: SUMA ALOCATA DE CLUB PENTRU A PLATI SALARIUL TUTUROR ANTRENORILOR ESTE MICA

--REZOLVARE--
-- s-au folosit: clauza WITH, group by, order si CASE
with salarii as(select id_club, sum(salariu) SUMA
            from  antrenor 
            group by id_club
            order by id_club
            )
select id_club,SUMA,
CASE  WHEN SUMA>1400 THEN 'SUMA ALOCATA DE CLUB PENTRU A PLATI SALARIUL TUTUROR ANTRENORILOR ESTE MARE '
      WHEN SUMA< 1400 AND SUMA>1200 THEN 'SUMA ALOCATA DE CLUB PENTRU A PLATI SALARIUL TUTUROR ANTRENORILOR ESTE MEDIE'
      ELSE 'SUMA ALOCATA DE CLUB PENTRU A PLATI SALARIUL TUTUROR ANTRENORILOR ESTE MICA'
END as "STATUS BUGET SALARII"
from salarii;


--5
-- Sa se insereze in tabelul SPORTIV sportivul cu urmatoarele date: id= 13, gen=M, nume= MAREL, prenume=RADU,
-- anul nasterii: 20-09-1966, cu id-ul nationalitatii 1, tipul : SPORTIV, indemnizatie: null si cu id-ul antrenorului: 50.
-- Sa se afiseze numele, prenumele si stadiul sportivului pentru toti sportivii care sunt nascuti in aceeasi data ca antrenorul,
-- iar antrenorul sa aiba prima litera din nume
-- egala cu prima litera dintr-un club. Dupa inserare se construieste cererea, iar dupa rulare se va anula inserarea.
-- Mai mult, stadiul sportivului va fi o coloana separata cu numele 'Stadiu sportiv' in care se vor afisa in functie 
-- de indemnizatia primita de sportiv (daca sportivul nu are indemnizatie aceasta va fi inlocuita cu 0) un mesaj:
-- se va afisa 'Sportivul nu face parte din lot' cand indemnizatia este 0, 'sportiv foarte valoros' cand indemnizatia este 800,
--altfel se va afisa 'sportiv din lot'

--REZOLVARE--
--SE FOLOSESC: DECODE SI SUBCERERI SINCRONIZATE--
INSERT INTO sportiv(id_sportiv,gen,nume,prenume,anul_nasterii,id_nationalitate,tip_sportiv,indemnizatie,id_antrenor)
VALUES (13,'M','MAREL','RADU',TO_DATE('20-09-1966','dd-mm-yyyy'),1,'SPORTIV',NULL,50);

select nume,prenume,decode(nvl(indemnizatie,0),0,'Sportivul nu face parte din lot',800,'sportiv foarte valoros din lot','sportiv din lot')as "Stadiu sportiv"
from sportiv sp
where sp.anul_nasterii  in(select anul_nasterii
                        from antrenor antr
                        where sp.anul_nasterii=antr.anul_nasterii and substr(antr.nume,1,1) in (select substr(cl.nume_club,1,1)
                                                                                            from club cl
                                                                                            where substr(antr.nume,1,1)=substr(cl.nume_club,1,1)
                                                                                            )
                        );

ROLLBACK;



--exercitiul 12
--Implementarea a 3 operatii de actualizare sau suprimare a datelor utilizand subcereri

--1. Sa se creasca cu 20% salariul antrenorilor care lucreaza la clubul Delfinul Bucuresti. Sa se anuleze modificarile.
update antrenor
set salariu=salariu*1.2
where salariu IN( select salariu 
                from antrenor
                where id_club=(select id_club
                                from club
                                where nume_club=upper('DELFINUL BUCURESTI')));
SELECT *FROM ANTRENOR;
ROLLBACK;

--2. Sa se elimine tipurile de competitii care nu au nicio competitie aferenta. Sa se anuleze modificarile.
--PREGATIRE--
--select*from competitie;
--select*from tip;

--REZOLVARE--
delete 
from TIP
where id_tip not in(select unique id_tip
                    from competitie);
 ROLLBACK;  
 
 --3. Sa se majoreze cu 10% indemnizatia pentru sportivii din lot care au obtinut medalie la oricare dintre competitii. 
 --   Sa se anuleze modificaile.
 
 --pregatirea
 -- select *from sportiv;
 --rezolvarea--
 update sportiv
 set indemnizatie=indemnizatie*1.1
 where id_sportiv IN (select unique id_sportiv
                    from participa
                    where medaliat=1)--exista situatii in care si un sportiv care nu se afla in lot poate sa obtina medalie
        and tip_sportiv=upper('SPORTIV LOT');--de aceea s-a mai adaugat aceasta conditie in where pentru a verifica daca 
                                            --sprtivul este din lot
 ROLLBACK;
 
--exercitiul 13
--crearea de secvente

SELECT * FROM CLUB;
CREATE SEQUENCE SEQ_CLUB
INCREMENT BY 10
START WITH 10
MAXVALUE 10000
NOCYCLE;

INSERT INTO CLUB
VALUES(SEQ_CLUB.NEXTVAL, 'AQUA TEAM');

INSERT INTO CLUB
VALUES(SEQ_CLUB.NEXTVAL, 'DELFINUL BUCURESTI');

INSERT INTO CLUB
VALUES(SEQ_CLUB.NEXTVAL, 'BUCHAREST SPORT CLUB ELITE');

INSERT INTO CLUB
VALUES(SEQ_CLUB.NEXTVAL, 'STEAUA CSA');

INSERT INTO CLUB
VALUES(SEQ_CLUB.NEXTVAL, 'ATACK TEAM');

COMMIT;

SELECT *FROM CLUB;

CREATE SEQUENCE SEQ_ANTRENOR
INCREMENT BY 10
START WITH 10
MAXVALUE 10000
NOCYCLE;

SELECT *FROM antrenor;

INSERT INTO antrenor(id_antrenor,nume,prenume,anul_nasterii,gen,ani_experienta,salariu,id_club)
VALUES (SEQ_ANTRENOR.nextval,'BECHERU','CATALIN',TO_DATE('10-09-1981','dd-mm-yyyy'),'M',10,500,70);

INSERT INTO antrenor(id_antrenor,nume,prenume,anul_nasterii,gen,ani_experienta,salariu,id_club)
VALUES (SEQ_ANTRENOR.nextval,'BECHERU','IULIA',TO_DATE('20-12-1984','dd-mm-yyyy'),'F',8,400.54,70);

INSERT INTO antrenor(id_antrenor,nume,prenume,anul_nasterii,gen,ani_experienta,salariu,id_club)
VALUES (SEQ_ANTRENOR.nextval,'ORMENISAN','DANIEL',TO_DATE('09-06-1988','dd-mm-yyyy'),'M',7,300.3,70);

INSERT INTO antrenor(id_antrenor,nume,prenume,anul_nasterii,gen,ani_experienta,salariu,id_club)
VALUES (SEQ_ANTRENOR.nextval,'DRAGULET','DAN',TO_DATE('20-09-1966','dd-mm-yyyy'),'M',20,600.45,80);

INSERT INTO antrenor(id_antrenor,nume,prenume,anul_nasterii,gen,ani_experienta,salariu,id_club)
VALUES (SEQ_ANTRENOR.nextval,'GIURCANEANU','MATEI',TO_DATE('10-09-1963','dd-mm-yyyy'),'M',23,800.5,80);

INSERT INTO antrenor(id_antrenor,nume,prenume,anul_nasterii,gen,ani_experienta,salariu,id_club)
VALUES (SEQ_ANTRENOR.nextval,'GRIGORE','MARIUS',TO_DATE('25-01-1981','dd-mm-yyyy'),'M',20,700.2,90);

INSERT INTO antrenor(id_antrenor,nume,prenume,anul_nasterii,gen,ani_experienta,salariu,id_club)
VALUES (SEQ_ANTRENOR.nextval,'TOMA','ALEXANDRU',TO_DATE('10-11-1991','dd-mm-yyyy'),'M',10,350,90);

INSERT INTO antrenor(id_antrenor,nume,prenume,anul_nasterii,gen,ani_experienta,salariu,id_club)
VALUES (SEQ_ANTRENOR.nextval,'BORDEI','DARIA',TO_DATE('03-09-1976','dd-mm-yyyy'),'F',25,800,100);

INSERT INTO antrenor(id_antrenor,nume,prenume,anul_nasterii,gen,ani_experienta,salariu,id_club)
VALUES (SEQ_ANTRENOR.nextval,'BRAN','IONEL',TO_DATE('10-08-1977','dd-mm-yyyy'),'M',21,650,100);

INSERT INTO antrenor(id_antrenor,nume,prenume,anul_nasterii,gen,ani_experienta,salariu,id_club)
VALUES (SEQ_ANTRENOR.nextval,'FIRANESCU','SANDRA',TO_DATE('24-03-1997','dd-mm-yyyy'),'F',4,300.1,110);

INSERT INTO antrenor(id_antrenor,nume,prenume,anul_nasterii,gen,ani_experienta,salariu,id_club)
VALUES (SEQ_ANTRENOR.nextval,'STAN','DENISA',TO_DATE('11-07-1980','dd-mm-yyyy'),'F',6,310,110);
COMMIT;


--Exercitiul 16
--1. Prima cerere division

--Sa se afiseze id-ul sportivilor , numele si prenumele sportivilor care participa
--la CEL PUTIN aceleasi competitii ca sportivul cu id-ul 7.
--Numele si prenumele trebuie concatenate, iar coloana trebuie numita corespunzator.

--REZOLVARE--

--Sportivii care participa la cel putin aceleasi competitii cu sportivul cu id-ul 7
-- sunt cei care partcipa si la alte competitii, dar obligatoriu la toate competitiile 
-- la care a participat sportivul cu id-ul 7 ( la competitia cu id-ul 5)
SELECT w.id_sportiv, nume||' '||prenume "Numele intreg"
FROM participa w JOIN sportiv e ON (w.id_sportiv = e.id_sportiv)
WHERE id_competitie  IN (SELECT id_competitie 
                        FROM participa
                        WHERE id_sportiv = 7
                        ) -- sportivii care participa la competitiile sportivului cu id-ul 7
 AND w.id_sportiv != 7
GROUP BY w.id_sportiv, nume,prenume
HAVING COUNT(*) = (SELECT COUNT(id_competitie)--sa fie egal cu numarul de competitii ale sportivului 7
                    FROM participa
                    WHERE id_sportiv = 7
                    );





--2. A doua cerere division

--Sa se afiseze id-ul sportivilor , numele si prenumele sportivilor care participa
--la EXACT aceleasi competitii ca sportivul cu id-ul 1.
--Numele si prenumele trebuie concatenate, iar coloana trebuie numita corespunzator.

--REZOLVARE--

SELECT w.id_sportiv, nume||' '||prenume "Numele intreg"
FROM participa w JOIN sportiv e ON (w.id_sportiv = e.id_sportiv)
WHERE id_competitie IN (SELECT id_competitie
                        FROM participa
                        WHERE id_sportiv = 1
                        ) 
 AND w.id_sportiv != 1

GROUP BY w.id_sportiv, nume,prenume
HAVING COUNT(*) = (SELECT COUNT(id_competitie)
                   FROM participa
                   WHERE id_sportiv = 1
                    ) 

MINUS -- se vor elimina sportivii care nu partcipa la exact toate competitiile sportivului cu id-ul 1
SELECT w.id_sportiv, nume||' '||prenume "Numele intreg"
FROM participa w JOIN sportiv e ON (w.id_sportiv = e.id_sportiv)
WHERE id_competitie NOT IN (SELECT id_competitie
                            FROM participa
                            WHERE id_sportiv = 1);
                            
-- 3.Outer join pe 4 tabele

--Sa se afiseze numele si prenumele tuturor sportivilor. Pentru fiecare sportiv in parte se va afisa numele sponsorului/sponsorilor
--care il sponsorizeaza pe sportiv, cat si  numele tuturor probelor,
-- la care a participat sportivul (se doreste ca probele la care a participat sa se afiseze cu toti sponsorii).

select s.nume as "NUME SPORTIV",s.prenume AS "PRENUME SPORTIV",spons.nume AS "NUME SPONSOR", prob.nume AS "PROBA"
from sportiv s full outer join sponsorizeaza p on(s.id_sportiv= p.id_sportiv)
                full outer join participa pr on(s.id_sportiv= pr.id_sportiv )
                full outer join proba prob on (prob.id_proba=pr.id_proba)
                full outer join sponsor spons on(spons.id_sponsor=p.id_sponsor)
;